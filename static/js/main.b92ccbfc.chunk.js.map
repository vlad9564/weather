{"version":3,"sources":["weather_icons/cloud_sun_1.svg","iconfinder_weather01_4102328.svg","weather_icons/normal_nihght.svg","weather_icons/sun.svg","weather_icons/heart.svg","icons/fog.svg","icons/wind.svg","icons/snow.svg","icons/sleet.svg","icons/rain.svg","icons/partly-cloudy-day.svg","icons/partly-cloudy-night.svg","icons/cloudy.svg","icons/clear-night.svg","icons/clear-day.svg","App.js","serviceWorker.js","utils/Constants.js","containers/DayWeather.js","containers/DaysWeather.js","containers/MainPage.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Boolean","window","location","hostname","match","FOG","fog","WIND","wind","SNOW","snow","SLEET","sleet","RAIN","rain","PARTIALY_CLOUD_DAY","partlyCloudyDay","PARTIALY_CLOUD_NIGHT","partlyCloudyNight","CLOUDY","cloudy","CLEAR_NIGHT","clearNight","CLEAR_DAY","clearDay","DayWeather","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setUVColor","bind","assertThisInitialized","setWeatherIcon","icon","Constants","uvType","color","uvIndex","iconForWeather","react_default","a","createElement","style","marginLeft","type","data","toISOString","slice","replace","backgroundColor","uvIndexTime","src","alt","DaysWeather","press","display","map","dayWeather","containers_DayWeather","MainPage","select","React","createRef","isLoaded","items","weatherDays","currently","normal_night","sun","cloud_sun_1","summary","temperature","allData","event","changeWeatherDataForDays","detail","item","innerHTML","setState","heart","getWeatherByLatLong","days","_this2","daily","forEach","element","dataStructure","Date","time","maximTemp","temperatureHigh","maximTempHour","temperatureHighTime","precipProbability","sunrise","sunriseTime","sunset","sunsetTime","push","date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","convdataTime","substr","console","log","coord","_this3","fetch","then","res","json","result","table","newSate","prepareData","error","_this4","navigator","geolocation","getCurrentPosition","current","addEventListener","changeLocation","profile","primary-title","secondary-title","logo","width","minWidth","id","ref","description","marginTop","height","index_es","label","axes","primary","position","containers_DaysWeather","ReactDOM","render","containers_MainPage","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b92ccbfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud_sun_1.8d2c0b2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_weather01_4102328.3077681e.svg\";","module.exports = __webpack_public_path__ + \"static/media/normal_nihght.5a81a676.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.3077681e.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.6739aca2.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.57e516b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.b29e4425.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.22e641c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.bc703a51.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.f278c2a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.2ddc5aae.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.e916a768.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.875f92ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.d9e03ad2.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.0ad08201.svg\";","import React, { Component } from 'react';\nimport logo from './iconfinder_weather01_4102328.svg';\nimport './App.css';\n// import './bootstrap.min.css';\nimport \"@ui5/webcomponents/dist/Button\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <ui5-button type=\"Default\">Enabled</ui5-button>\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import fog from '../icons/fog.svg';\r\nimport wind from '../icons/wind.svg';\r\nimport snow from '../icons/snow.svg';\r\nimport sleet from '../icons/sleet.svg';\r\nimport rain from '../icons/rain.svg';\r\nimport partlyCloudyDay from '../icons/partly-cloudy-day.svg';\r\nimport partlyCloudyNight from '../icons/partly-cloudy-night.svg'\r\nimport cloudy from '../icons/cloudy.svg'\r\nimport clearNight from '../icons/clear-night.svg'\r\nimport clearDay from '../icons/clear-day.svg'\r\n\r\n\r\nexport const ICON_PICTURE = \"https://scontent.fotp3-1.fna.fbcdn.net/v/t1.0-9/13939519_1218182778232415_7113308434780676075_n.jpg?_nc_cat=110&_nc_ht=scontent.fotp3-1.fna&oh=1c6c88457e6d700a8aadcc83531e3561&oe=5D3A77E0\"\r\nexport const BRASOV_LOCATION = \"44.92543,25.4567\";\r\nexport const TARGOVISTE_LOCATION = \"44.92543,25.4567\";\r\nexport const BERLIN_LOCATION = \"52.520008,13.404954\";\r\nexport const CLUJ_LOCATION = \"\";\r\nexport const BUCURESTI_LOCATION = \"\";\r\nexport const ZARNEST_LOCATION = \"45.515,25.3672\"\r\n\r\nexport const FOG = fog;\r\nexport const WIND = wind;\r\nexport const SNOW = snow;\r\nexport const SLEET = sleet;\r\nexport const RAIN = rain;\r\nexport const PARTIALY_CLOUD_DAY = partlyCloudyDay;\r\nexport const PARTIALY_CLOUD_NIGHT = partlyCloudyNight;\r\nexport const CLOUDY = cloudy;\r\nexport const CLEAR_NIGHT = clearNight;\r\nexport const CLEAR_DAY = clearDay;\r\n\r\n\r\n","import \"@ui5/webcomponents/dist/Button\";\r\nimport React, { Component } from 'react';\r\nimport * as Constants from '../utils/Constants';\r\n\r\n\r\n\r\n\r\n\r\nclass DayWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        this.setUVColor = this.setUVColor.bind(this);\r\n        this.setWeatherIcon = this.setWeatherIcon.bind(this);\r\n    }\r\n\r\n\r\n    setWeatherIcon(icon) {\r\n        if (icon === \"fog\") return Constants.FOG\r\n        if (icon === \"wind\") return Constants.WIND\r\n        if (icon === \"snow\") return Constants.SNOW\r\n        if (icon === \"sleet\") return Constants.SLEET\r\n        if (icon === \"rain\") return Constants.RAIN\r\n        if (icon === \"partly-cloudy-day\") return Constants.PARTIALY_CLOUD_DAY\r\n        if (icon === \"partly-cloudy-night\") return Constants.PARTIALY_CLOUD_NIGHT\r\n        if (icon === \"cloudy\") return Constants.CLOUDY\r\n        if (icon === \"clear-night\") return Constants.CLEAR_NIGHT\r\n        if (icon === \"clear-day\") return Constants.CLEAR_DAY\r\n    }\r\n\r\n    setUVColor(uvType) {\r\n        debugger;\r\n        if (uvType < 3) {\r\n            return \"Green\"\r\n        }\r\n        if (uvType >= 3 && uvType < 6) {\r\n            return \"Yellow\"\r\n        }\r\n        if (uvType >= 6 && uvType < 8) {\r\n            return 'Orange';\r\n        }\r\n        if (uvType >= 8 && uvType < 11) {\r\n            return \"Red\"\r\n        }\r\n        if (uvType >= 11 && uvType < 20) {\r\n            return \"Violet\"\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        var color = this.setUVColor(this.props.uvIndex);\r\n        var iconForWeather = this.setWeatherIcon(this.props.icon);\r\n        debugger;\r\n        return (\r\n            <div>\r\n                <div style={{ marginLeft: \"2px\" }}><ui5-button type=\"Emphasized\">{this.props.data.toISOString().slice(0, 16).replace(\"T\", \" \") + \"\\n\" + this.props.icon}</ui5-button></div>\r\n                <label style={{ backgroundColor: color }}>Radiatii UV at {this.props.uvIndexTime.toISOString()} </label>\r\n                <img src={iconForWeather} alt=\"logo\" />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayWeather;","import \"@ui5/webcomponents/dist/Button\";\r\nimport React, { Component } from 'react';\r\nimport DayWeather from './DayWeather';\r\n\r\nclass DaysWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        this.press = this.press.bind(this);\r\n    }\r\n\r\n    press() {\r\n        debugger;\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return (<div style={{ display: \"flex\" }}>\r\n\r\n            {this.props.data.map(dayWeather => <DayWeather {...dayWeather} />)}\r\n        \r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default DaysWeather;","import React, { Component } from 'react';\r\n// import logo from \"./../../public/weather_icons/cloud_sun_1.svg\"\r\nimport cloud_sun_1 from '../weather_icons/cloud_sun_1.svg';\r\nimport normal_night from '../weather_icons/normal_nihght.svg';\r\nimport sun from '../weather_icons/sun.svg';\r\nimport heart from '../weather_icons/heart.svg';\r\nimport \"@ui5/webcomponents/dist/List\";\r\nimport \"@ui5/webcomponents/dist/StandardListItem\";\r\nimport \"@ui5/webcomponents/dist/CustomListItem\";\r\nimport \"@ui5/webcomponents/dist/GroupHeaderListItem\";\r\nimport \"@ui5/webcomponents/dist/ShellBar\";\r\nimport DaysWeather from './DaysWeather';\r\nimport { Chart } from \"react-charts\";\r\n// import Chart from './Chart';\r\n\r\nimport * as Constants from \"../utils/Constants\"\r\n\r\nvar x = 3;\r\nclass MainPage extends Component {\r\n\r\n\r\n\r\n    constructor(props, state) {\r\n        // this.myFunction = this.myFunction.bind(this);\r\n\r\n        super(props, state);\r\n\r\n        // var x = navigator.geolocation.getCurrentPosition(this.success);\r\n        // var x = require(\"augero-constants\");\r\n        this.select = React.createRef();\r\n        this.state = {\r\n            isLoaded: false,\r\n            items: \"TEst\"\r\n        }\r\n        this.weatherDays = [];\r\n\r\n    }\r\n\r\n    prepareData(data) {\r\n        var icon;\r\n        // debugger;\r\n        switch (data.currently.icon) {\r\n            case \"clear-night\":\r\n                icon = normal_night;\r\n                break;\r\n            case \"clear-day\":\r\n                icon = sun;\r\n                break;\r\n            default:\r\n                icon = cloud_sun_1\r\n                break;\r\n        }\r\n        var newSate = {\r\n            isLoaded: false,\r\n            items: data.currently.summary,\r\n            icon: icon,\r\n            temperature: data.currently.temperature,\r\n            allData: data\r\n        }\r\n        return newSate;\r\n    }\r\n\r\n\r\n    changeLocation(event) {\r\n        this.weatherDays = [];\r\n        this.changeWeatherDataForDays(this.state.allData)\r\n        let location = event.detail.item.innerHTML\r\n        switch (location) {\r\n            case \"BrasovN\":\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    items: \"Foarte cald la noi\",\r\n                    icon: heart,\r\n                    temperature: \"∞\"\r\n                });\r\n                break;\r\n            case \"Berlin\":\r\n                this.getWeatherByLatLong(Constants.BERLIN_LOCATION);\r\n                break;\r\n            case \"Zarnesti\":\r\n                this.getWeatherByLatLong(Constants.ZARNEST_LOCATION);\r\n                break;\r\n            case \"Targoviste\":\r\n                this.getWeatherByLatLong(Constants.TARGOVISTE_LOCATION);\r\n                break;\r\n            case \"Brasov\":\r\n                this.getWeatherByLatLong(Constants.BRASOV_LOCATION);\r\n                break;\r\n\r\n            default:\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    items: \"Unknown yet# Under development\",\r\n                    icon: cloud_sun_1,\r\n                    temperature: \"\"\r\n                });\r\n                break;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    setChartForWeather(data) {\r\n        debugger;\r\n    }\r\n\r\n    changeWeatherDataForDays(days) {\r\n        // debugger\r\n\r\n        var x = days.daily.data.forEach(element => {\r\n            // debugger;\r\n            var dataStructure = {\r\n                data: new Date(element.time * 1000),\r\n                icon: element.icon,\r\n                summary: element.summary,\r\n                maximTemp: element.temperatureHigh,\r\n                maximTempHour: new Date(element.temperatureHighTime * 1000),\r\n                uvIndex: element.uvIndex,\r\n                uvIndexTime: new Date(element.uvIndexTime * 1000),\r\n                precipProbability: element.precipProbability,\r\n                sunrise: new Date(element.sunriseTime * 1000),\r\n                sunset: new Date(element.sunsetTime * 1000)\r\n            }\r\n            this.weatherDays.push(dataStructure);\r\n\r\n        }, this);\r\n        debugger;\r\n\r\n\r\n        // Create a new JavaScript Date object based on the timestamp\r\n        // multiplied by 1000 so that the argument is in milliseconds, not seconds.\r\n        // this.calculateDays(days);\r\n\r\n    }\r\n    calculateDays(days) {\r\n        var date = new Date(days.daily.data[0].time * 1000);\r\n        var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        // Convert timestamp to milliseconds\r\n        // var date = new Date(unixtimestamp*1000);\r\n        // Year\r\n        var year = date.getFullYear();\r\n        var month = months_arr[date.getMonth()];\r\n        var day = date.getDate();\r\n        var hours = date.getHours();\r\n        var minutes = \"0\" + date.getMinutes();\r\n        var seconds = \"0\" + date.getSeconds();\r\n        var convdataTime = month + '-' + day + '-' + year + ' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n        console.log(convdataTime);\r\n    }\r\n\r\n    getWeatherByLatLong(coord) {\r\n\r\n        const api = 'https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/a2e9fc452d514f082cc3d7a0adbda5d5/' + coord + '?units=si&lang=ro';\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // debugger;\r\n                    console.table(result)\r\n                    var newSate = this.prepareData(result);\r\n                    this.setState(newSate);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        navigator.geolocation.getCurrentPosition(() => {\r\n            // debugger\r\n        }\r\n            , () => {\r\n                // debugger;\r\n            });\r\n\r\n        this.select.current.addEventListener('itemPress', event => {\r\n            this.changeLocation(event);\r\n\r\n        });\r\n\r\n        const defaultCoord = \"44.92543,25.4567\";\r\n        this.getWeatherByLatLong(defaultCoord);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <ui5-shellbar\r\n                    profile={Constants.ICON_PICTURE}\r\n                    primary-title=\"Weather application\"\r\n                    secondary-title=\"@Vlad Ciobanu\"\r\n                    logo={cloud_sun_1}\r\n                >\r\n                </ui5-shellbar>\r\n\r\n                <div style={{ display: \"-webkit-box\" }} >\r\n                    <div style={{\r\n                        width: \"30%\",\r\n                        minWidth: \"200px\"\r\n                    }}>\r\n                        <ui5-list id=\"myList\" ref={this.select}>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Acasa la ei doi\">BrasovN</ui5-li>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Acasa la Cristina\">Targoviste</ui5-li>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Acasa la Vlad\">Zarnesti</ui5-li>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Merem la Cluj\">Cluj-Napoca</ui5-li>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Bucuresti\">Bucuresti</ui5-li>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Bucuresti\">Berlin</ui5-li>\r\n                            <ui5-li icon=\"sap-icon://functional-location\" type=\"Active\" description=\"Brasov\">Brasov</ui5-li>\r\n\r\n\r\n                        </ui5-list>\r\n\r\n                    </div>\r\n                    <div\r\n                        // padding: \"5% 10px 10px\",\r\n                        // marginTop: \"auto\",\r\n                        // marginRight: \"auto\",\r\n                        // marginBottom: \"auto\",\r\n                        // marginLeft: \"20%\"\r\n                        style={{ marginLeft: \"5%\", marginTop: \"2%\" }}\r\n                    >\r\n                        <label>Statusl vremii astazi</label>\r\n                        <div>Statusul vremii: {this.state.items}</div>\r\n                        <img src={this.state.icon} alt=\"logo\" />\r\n                        <div>Temperatura : {this.state.temperature} °C</div>\r\n                        <div\r\n                            style={{\r\n                                width: \"400px\",\r\n                                height: \"300px\"\r\n                            }}\r\n                        >\r\n                            <Chart\r\n                                data={[\r\n                                    {\r\n                                        label: \"Series 1\",\r\n                                        data: [[new Date(), 18], [new Date() + 1, 22]]\r\n                                    }\r\n                                    // {\r\n                                    //     label: \"Series 2\",\r\n                                    //     data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\r\n                                    // },\r\n\r\n                                ]}\r\n                                axes={[\r\n                                    { primary: true, type: \"linear\", position: \"bottom\" },\r\n                                    { type: \"linear\", position: \"left\" }\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                        {/* <div style={{ display: \"flex\" }}>\r\n\r\n                            <div style={{ marginLeft: \"2px\" }}><ui5-button type=\"Emphasized\">Azi</ui5-button></div>\r\n                            <div style={{ marginLeft: \"2px\" }}><ui5-button type=\"Emphasized\">Maine</ui5-button></div>\r\n                            <div style={{ marginLeft: \"2px\" }}><ui5-button type=\"Emphasized\">Poimaine</ui5-button></div>\r\n                            <div style={{ marginLeft: \"2px\" }}><ui5-button type=\"Emphasized\">Peste 3 zile</ui5-button></div>\r\n                            <div style={{ marginLeft: \"2px\" }}><ui5-button type=\"Emphasized\">Peste 4 zile</ui5-button></div>\r\n\r\n                        </div> */}\r\n                        <DaysWeather data={this.weatherDays}></DaysWeather>\r\n                    </div>\r\n\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MainPage from './containers/MainPage'\n\nReactDOM.render(<MainPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}